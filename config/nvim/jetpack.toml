[[plugins]]
repo = 'tani/vim-jetpack'
on_event = 'CmdlineEnter'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
on_event = 'CmdlineEnter'
hook_source = "set helplang=ja,en"

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
opt = true

### Appearance ###
[[plugins]]
repo = 'akinsho/bufferline.nvim'
tag = 'v4.3.0'
on_event = 'VimEnter'
hook_post_source = """
lua << EOF
require('bufferline').setup({
  options = {
    numbers = 'buffer_id',
    diagnostics = "nvim_lsp",
    indicator = { style = 'none' },
  },
  highlights = {
    tab_selected = {
      fg = { attribute = "fg", highlight = "TabLineSel" },
      bg = { attribute = "bg", highlight = "TabLineSel" }
    },
    buffer_selected = {
      fg = { attribute = "fg", highlight = "TabLineSel" },
      bg = { attribute = "bg", highlight = "TabLineSel" }
    },
    numbers_selected = {
      fg = { attribute = "fg", highlight = "TabLineSel" },
      bg = { attribute = "bg", highlight = "TabLineSel" }
    },
    close_button_selected = {
      fg = { attribute = "fg", highlight = "TabLineSel" },
      bg = { attribute = "bg", highlight = "TabLineSel" }
    },
  }
})
EOF
"""

[[plugins]]
repo = "tiagovla/scope.nvim"
on_source = 'bufferline.nvim'
hook_source = "lua require('scope').setup()"

[[plugins]]
repo = 'ray-x/starry.nvim'
on_event = 'VimEnter'
hook_source = '''
let g:starry_disable_background = v:true
let g:starry_set_hl             = v:true
colorscheme monokai
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'VimEnter'
hook_add = "lua vim.opt.runtimepath:prepend(vim.fn.stdpath('data') .. '/treesitter')"
hook_post_source = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
    parser_install_dir = vim.fn.stdpath('data') .. '/treesitter',
    auto_install = true,
    highlight = { enable = true, },
    indent = { enable = true, },
  }
EOF
'''

[[plugins]]
repo = 'brenoprata10/nvim-highlight-colors'
on_event = 'VimEnter'
hook_post_source = "lua require('nvim-highlight-colors').setup()"

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
tag = 'v2.20.7'
on_post_source = 'nvim-treesitter'
hook_post_source = '''
lua << EOF
require('indent_blankline').setup {
  show_current_context = true,
  show_current_context_start = true,
}
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter-context'
on_event = ['CursorMoved', 'CursorMovedI']
depends = 'nvim-treesitter'

### Extra Writing ###
[[plugins]]
## repo = 'windwp/nvim-autopairs'
repo = 'hrsh7th/nvim-insx'
on_event = 'InsertEnter'
hook_post_source = "lua require('insx.preset.standard').setup()"

[[plugins]]
repo = 'shinespark/vim-list2tree'
on_cmd = 'List2Tree'

[[plugins]]
repo = 'mattn/vim-maketable'
on_cmd = 'MakeTable'

[[plugins]]
repo = 'inotom/str2htmlentity'
on_cmd = [ "Str2HtmlEntity", "Entity2HtmlString" ]

### Search ###
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = 'plenary.nvim'
tag = '0.1.2'
on_cmd = 'Telescope'
hook_add = 'lua require("my-keymap.telescope")'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = '<Plug>(openbrowser'
hook_add = 'lua require("my-keymap.open-browser")'

[[plugins]]
repo = 'rhysd/devdocs.vim'
depends = 'open-browser.vim'
on_cmd = ['DevDocs', 'DevDocsUnderCursor', 'DevDocsALL', 'DevDocsALLUnderCursor']

[[plugins]]
repo = 'rhysd/git-messenger.vim'
on_cmd = 'GitMessenger'
on_map = '<Plug>(git-messenger)'
hook_add = '''
let g:git_messenger_always_into_popup = v:true
let g:git_messenger_floating_win_opts = { "border": "single" }
'''

[[plugins]]
repo = 'previm/previm'
on_ft = ['markdown', 'rst', 'mkd', 'md']
on_cmd = 'PrevimOpen'
depends = 'open-browser.vim'

[[plugins]]
repo = 'windwp/nvim-ts-autotag'
on_ft = [ 'html', 'javascript', 'jsx', 'markdown', 'php', 'rescript', 'svelte', 'tsx', 'typescript', 'vue', 'xml' ]
on_event = 'InsertEnter'
depends = 'nvim-treesitter'
hook_source = "lua require('nvim-ts-autotag').setup()"

## Language Server Protocol ##
[[plugins]]
repo = "hrsh7th/cmp-nvim-lsp"
opt = true

[[plugins]]
repo = "hrsh7th/nvim-cmp"
opt = true
# my-cmpの設定でluasnipを呼ぶ
depends = ['LuaSnip']
hook_post_source = "lua require('my-cmp')"

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = ["VimEnter"]
# my-lspの設定でcmp-nvim-lspを呼び、そこで更にnvim-cmpを呼ぶ
depends = ['cmp-nvim-lsp','nvim-cmp']
hook_post_source = """
lua << EOF
require('my-lsp')
require('my-keymap.lsp')
EOF
"""

[[plugins]] # TODO: fidget.nvim not working with intelephense LSP
repo = 'j-hui/fidget.nvim'
tag = 'legacy'
on_post_source = 'nvim-lspconfig'
hook_post_source = "lua require('fidget').setup()"

[[plugins]]
repo = "ray-x/lsp_signature.nvim"
on_post_source = 'nvim-lspconfig'
hook_post_source = 'lua require("lsp_signature").setup({zindex = 50})'

[[plugins]]
repo = "https://git.sr.ht/~whynothugo/lsp_lines.nvim"
on_post_source = 'nvim-lspconfig'
on_event = ['TextChanged', 'TextChangedI', 'CursorMoved', 'CursorMovedI']
hook_source = """
lua << EOF
require('lsp_lines').setup()
vim.diagnostic.config({ virtual_text = false })
EOF
"""

## Sources for nvim-cmp ##
[[plugins]]
repo = "L3MON4D3/LuaSnip"
opt = true
build = "make install_jsregexp"

[[plugins]]
repo = "hrsh7th/cmp-path"
on_source = 'nvim-cmp'

[[plugins]]
repo = "hrsh7th/cmp-buffer"
on_source = 'nvim-cmp'

[[plugins]]
repo = "hrsh7th/cmp-cmdline"
on_source = 'nvim-cmp'

[[plugins]]
repo = 'octaltree/cmp-look'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'lukas-reineke/cmp-rg'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'saadparwaiz1/cmp_luasnip'
on_source = 'nvim-cmp'

## Debug Adapter Protocol ##
# F5を押してデバッガ読み込み,もう一度押してデバッガ起動
[[plugins]]
repo = "mfussenegger/nvim-dap"
opt = true

[[plugins]]
repo = "rcarriga/nvim-dap-ui"
on_map = '<F5>'
depends = "nvim-dap"
hook_post_source = """
lua << EOF
require('my-dap')
require('my-keymap.dap')
EOF
"""

[[plugins]]
repo = "xdebug/vscode-php-debug"
opt = true
build = """
pnpm import
pnpm install --frozen-lockfile
pnpm run build
"""



# TODO: 今度試してみたい
# autosave
# toggle comments
# generate Document comment
# Debugger
# https://github.com/adoy/vim-php-refactoring-toolbox
# https://github.com/dsawardekar/wordpress.vim
# https://github.com/hotwatermorning/auto-git-diff
# https://github.com/nvim-treesitter/nvim-treesitter-textobjects
# https://daisuzu.hatenablog.com/entry/2020/12/03/003629  ## Quickfix
# https://zenn.dev/tmrekk/articles/4380961a754287  ## Quickfix
# https://github.com/ray-x/navigator.lua
# https://github.com/ThePrimeagen/refactoring.nvim
# https://github.com/glacambre/firenvim
# https://github.com/numToStr/Comment.nvim
# https://github.com/folke/which-key.nvim
# https://github.com/marilari88/twoslash-queries.nvim
#
#[[plugins]]
#repo = "mxsdev/nvim-dap-vscode-js"
#depends = "mfussenegger/nvim-dap"
#hook_post_source = ""
#
#[[plugins]]
#repo = "microsoft/vscode-js-debug"
#opt = true
#build = """
#npm install --legacy-peer-deps
#npx gulp vsDebugServerBundle
#mv dist out
#"""
