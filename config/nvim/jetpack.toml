[[plugins]]
repo = 'tani/vim-jetpack'
on_event = 'CmdlineEnter'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
opt = true

### Appearance ###
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
tag = 'v0.9.0'
on_event = 'VimEnter'
hook_post_source = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
    parser_install_dir = vim.fn.stdpath('data') .. '/treesitter',
    auto_install = true,
    highlight = { enable = true, },
    indent = { enable = true, },
  }
vim.opt.runtimepath:append(vim.fn.stdpath('data') .. '/treesitter')
EOF
'''

[[plugins]]
repo = 'sainnhe/sonokai'
tag = 'v0.3.3'
on_post_source = 'nvim-treesitter'
depends = 'nvim-treesitter'
hook_post_source = '''
let g:sonokai_transparent_background    = 1
let g:sonokai_menu_selection_background = 'red'
let g:sonokai_better_performance        = 1
colorscheme sonokai
'''

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
on_post_source = 'nvim-treesitter'
hook_add = 'set termguicolors'
hook_post_source = "lua require('colorizer').setup()"

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
tag = 'v2.20.4'
on_post_source = 'nvim-treesitter'
depends = 'nvim-treesitter'
hook_post_source = '''
lua << EOF
vim.cmd("highlight IndentBlanklineContextStart guifg=#56B6C2 gui=nocombine")
require('indent_blankline').setup {
  show_current_context = true,
  show_current_context_start = true,
}
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter-context'
on_event = 'CursorMoved'
depends = 'nvim-treesitter'

### Extra Writing ###
[[plugins]]
repo = 'windwp/nvim-autopairs'
on_event = 'InsertEnter'
hook_post_source = "lua require('nvim-autopairs').setup()"

[[plugins]]
repo = 'shinespark/vim-list2tree'
on_cmd = 'List2Tree'

[[plugins]]
repo = 'mattn/vim-maketable'
on_cmd = 'MakeTable'

[[plugins]]
repo = 'inotom/str2htmlentity'
on_cmd = [ "Str2HtmlEntity", "Entity2HtmlString" ]

### Search ###
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = 'plenary.nvim'
tag = '0.1.1'
on_cmd = 'Telescope'
hook_add = 'nmap <Leader>f <Cmd>Telescope<CR>'

[[plugins]]
repo = 'tyru/open-browser.vim'
tag = 'v0.1.2'
on_map = '<Plug>(openbrowser'
hook_add = '''
nmap gw <Plug>(openbrowser-smart-search)
vmap gw <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'rhysd/devdocs.vim'
depends = 'open-browser.vim'
on_map = '<Plug>(devdocs-under-cursor)'
hook_add = '''
nmap K <Plug>(devdocs-under-cursor)
'''

[[plugins]]
repo = 'rhysd/git-messenger.vim'
on_cmd = 'GitMessenger'
on_map = '<Plug>(git-messenger)'
hook_add = '''
nmap <Leader>gm <Plug>(git-messenger)
'''

### Filetype Specific Functions ###
[[plugins]]
repo = 'Shougo/context_filetype.vim'
opt = true

[[plugins]]
repo = 'osyo-manga/vim-precious'
on_event = 'CursorMoved'
depends = 'context_filetype.vim'

[[plugins]]
repo = 'previm/previm'
tag = '1.8.1'
on_ft = ['markdown', 'rst', 'mkd', 'md']
on_cmd = 'PrevimOpen'
depends = 'open-browser.vim'
hook_add = '''
let g:previm_open_cmd = 'open -a Safari'
let g:previm_enable_realtime = 1
'''

## Language Server Protocol ##
# [[plugins]]
# repo = 'Maan2003/lsp_lines.nvim'
# on_event = 'BufEnter'
# hook_source = "lua << require('lsp_lines').setup()"

# 今度試してみたいもの
# autosave
# toggle comments
# generate Document comment
# Debugger
# code completion
# https://github.com/adoy/vim-php-refactoring-toolbox
# https://github.com/vim-php/vim-php-refactoring
# https://github.com/bling/vim-bufferline
# https://github.com/othree/yajs.vim
# https://github.com/dsawardekar/wordpress.vim
# https://github.com/hotwatermorning/auto-git-diff
# https://github.com/lukas-reineke/cmp-rg
# https://github.com/aduros/ai.vim
# https://github.com/mattn/vim-findroot
# https://github.com/nvim-treesitter/nvim-treesitter-textobjects
# https://daisuzu.hatenablog.com/entry/2020/12/03/003629  ## Quickfix
# https://zenn.dev/tmrekk/articles/4380961a754287  ## Quickfix
